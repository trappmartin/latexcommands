% pctex.sty
%
% Tikz plotting code adopted from tikzlibraryspn.code.tex
% Copyright 2016 Nicola Di Mauro and Antonio Vergari
%
% Copyright 2023 Martin Trapp
%
% This file may be distributed and/or modified
%
% 1. under the LaTeX Project Public License and/or
% 2. under the GNU General Public License.

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{pctex}[2023/01/31 pctex]

\RequirePackage{amsmath}
\RequirePackage{amsfonts}
\RequirePackage{bm}

%%%%%
% Misc %
%%%%%
\newcommand{\lse}[2]{\mathrm{L}\overset{#2}{\underset{#1}{\mathrm{\Sigma}}}\mathrm{E}}
\newcommand{\poly}[1]{\texttt{poly}(#1)}
\newcommand{\indepsym}{\perp \!\!\! \perp}
\newcommand{\indep}[2]{#1\indepsym #2}
\newcommand{\cindep}[3]{#1 \indepsym #2\,|\, #3 }


%%%%%%%%%%%%%% 
% Graph-related functions %
%%%%%%%%%%%%%%
\newcommand{\graph}{\mathcal{G}}
\newcommand{\walk}{\mathcal{W}}
\newcommand{\tree}{\mathcal{T}}
\newcommand{\node}{\mathsf{N}}
\newcommand{\nodes}{\bm{\node}}
\newcommand{\cnode}{\mathsf{C}}
\newcommand{\cnodes}{\bm{\cnode}}

\newcommand{\ch}[1]{\operatorname{ch}(#1)}
\newcommand{\pa}[1]{\operatorname{par}(#1)}
\newcommand{\neigh}[1]{\ensuremath{\operatorname{neigh}(#1)}}

\DeclareMathOperator{\vset}{V}
\DeclareMathOperator{\eset}{E}

%%%%%%%%%%%%%
% PC-related functions %
%%%%%%%%%%%%%
\newcommand{\pc}{\mathcal{C}}
\newcommand{\pnode}{\mathsf{P}}
\newcommand{\pnodes}{\bm{\pnode}}
\newcommand{\snode}{\mathsf{S}}
\newcommand{\snodes}{\bm{\snode}}
\newcommand{\lnode}{\mathsf{L}}
\newcommand{\lnodes}{\bm{\lnode}}

\newcommand{\region}{\mathsf{A}}
\newcommand{\regions}{\bm{\region}}
\newcommand{\partition}{\mathsf{S}}
\newcommand{\partitions}{\bm{\partition}}
\newcommand{\rg}{\mathcal{R}}

\newcommand{\scope}[1]{\ensuremath{\psi(#1)}}
\newcommand{\vtree}{\ensuremath{\mathcal{V}}}

%%%%%%%%%%%%%%%%%%%%%%
% Tikz-related function                              %
% Code adopted from tikzlibraryspn.code % 
%%%%%%%%%%%%%%%%%%%%%%
\RequirePackage{tikz}
\RequirePackage{pgfplots}

\usetikzlibrary{chains}
\def\normaltwo{\x,{exp((-(\x)^2)/0.25)}}

% sum node style
\tikzstyle{sum} = [circle,fill=white,draw=black,inner sep=0pt,line width=0.6pt,
minimum size=18pt, path picture={\draw (path picture bounding box.south) -- (path picture bounding box.north) (path picture bounding box.west) -- (path picture bounding box.east);}, node distance=1]

% product node style
\tikzstyle{prod} = [circle,fill=white,draw=black,inner sep=0pt,line width=0.6pt,
minimum size=18pt, path picture={\draw (path picture bounding box.south east) -- (path picture bounding box.north west) (path picture bounding box.south west) -- (path picture bounding box.north east);}, node distance=1]

% \sumnode [tikz-options] {sum node name} 
\newcommand{\sumnode}[2][]{
  \node[sum, #1] (#2) {};
}

% \prodnode [tikz-options] {product node name} 
\newcommand{\prodnode}[2][]{
  \node[prod, #1] (#2) {$\times$};
}
\newcommand{\wprodnode}[3][]{
  \node[prod, #1] (#2) {$\color{#3}\times$};
}

% \maxnode [tikz-options] {max node name} 
\newcommand{\maxnode}[2][]{
  \node[circle,fill=white,draw=black,inner sep=0pt,line width=0.6pt,
  minimum size=18pt, node distance=1, #1] (#2) {\scriptsize $max$};
}

% \emptynode [tikz-options] {generic node name}
\newcommand{\emptynode}[2][]{
  \node[circle,fill=white,draw=black,inner sep=0pt,line width=0.6pt,
  minimum size=18pt, node distance=1, #1] (#2) {};
}

\newcommand{\varnode}[3][]{
  \node[circle,fill=white,draw=black,inner sep=0pt,line width=0.6pt, minimum size=19pt, #1] (#2) {#3};
}

\newcommand{\varsqnode}[4][]{
  \node[rectangle, rounded corners=3pt,fill=white,draw=#4,inner sep=0pt,line width=0.6pt, minimum size=19pt, #1] (#2) {#3};
}

\newcommand{\evnode}[4][]{
  \node[circle,fill=#4,text=white,inner sep=0pt, minimum size=18pt, #1] (#2) {#3};
}

\newcommand{\evnodevar}[5][]{
  \node[circle,fill=#4,text=white,inner sep=0pt, minimum size=18pt,
  #1] (#2) {#3};
  \node[below=1pt of #2, xshift=1pt] (#2_vn) {#5};
}

\newcommand{\bernode}[3][]{
  \node[circle,fill=white,draw=black,inner sep=0pt,line width=0.6pt,
  minimum size=18pt, #1] (#2) {\tikz\draw circle (3pt);};
  \node[below=1pt of #2, xshift=1pt] (#2_vn) {#3};
}

\newcommand{\contnode}[3][]{
  \node[circle,fill=white,draw=black,inner sep=0pt,line width=0.6pt,
  minimum size=18pt, node distance=1, #1] (#2) {           
  \begin{tikzpicture}[scale=0.18]
      \draw[line width=0.6pt,domain=-1.5:1.5] plot (\normaltwo);
   \end{tikzpicture}
            };
  \node[below=1pt of #2, xshift=1pt] (#2_vn) {#3};
}

\newcommand{\catnode}[3][]{
  \node[circle,fill=white,draw=black,inner sep=0pt,line width=0.6pt,
  minimum size=18pt, node distance=1, #1] (#2) {           
          \begin{tikzpicture} %these distributions look really distorted, and are the ones I want to include, inside the minipage
                \begin{axis}[
                no markers, scale only axis, domain=-4:4, smooth,
                axis lines=none,
                height=10pt]
                \addplot [mark=none] coordinates { (0,0) (0,10)};
                \addplot [mark=none] coordinates { (-1,0) (-1,7)};
                \addplot [mark=none] coordinates { (-2,0) (-2,3)};
                \addplot [mark=none] coordinates { (1,0) (1,5)};
                \addplot [mark=none] coordinates { (2,0) (2,8)};
                \end{axis}
            \end{tikzpicture}};
  \node[below=1pt of #2] (#2_vn) {#3};
}

% \edge [options] {inputs} {outputs}
\newcommand{\edge}[3][]{ %
  % Connect all nodes #2 to all nodes #3.
  \foreach \x in {#2} { %
    \foreach \y in {#3} { %
      \path (\x) edge [-latex,line width=0.6pt,#1] (\y) ;%
    } ;
  } ;
}

\newcommand{\upedge}[3][]{
  \path (#2) edge [line width=1pt,->,>=stealth,#1] (#3);
}

\newcommand{\ledge}[4][]{
  \path (#2) edge [line width=1pt,->,>=stealth,#1,edge label=#4] (#3);
}

\newcommand{\weigedge}[4][]{
  \draw[line width=0.6pt,-latex,#1] (#2) edge node [midway,line width=0.6pt,#1] {#4} (#3) ;
}
